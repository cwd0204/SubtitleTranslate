1
00:00:00,000 --> 00:00:02,430
自计算黎明以来，编码一直
Coding has been the bread and butter for 

2
00:00:02,430 --> 00:00:04,290
是开发人员的面包和黄油。
developers since the dawn of computing. 

3
00:00:04,290 --> 00:00:07,170
我们习惯于通过将需求分解为可组合
We're used to creating applications by breaking down 

4
00:00:07,170 --> 00:00:09,330
的问题来创建应用程序，然后
requirements into composable problems 

5
00:00:09,330 --> 00:00:11,145
可以对其进行编码。
that can then be coded against. 

6
00:00:11,145 --> 00:00:13,350
因此，例如，如果我们
So for example, if we have to write 

7
00:00:13,350 --> 00:00:15,990
必须编写一个算出库存分析的应用程序，
an application that figures out a stock analytic, 

8
00:00:15,990 --> 00:00:18,480
也许价格除以比率，
maybe the price divided by the ratio, 

9
00:00:18,480 --> 00:00:20,400
我们通常可以编写代码
we can usually write code to get 

10
00:00:20,400 --> 00:00:22,380
以从数据源中获取
the values from a data source, 

11
00:00:22,380 --> 00:00:25,050
值，进行计算，然后返回结果。
do the calculation and then return the result. 

12
00:00:25,050 --> 00:00:27,180
或者，如果我们正在写
Or if we're writing a game 

13
00:00:27,180 --> 00:00:29,010
游戏，我们通常可以弄清楚规则。
we can usually figure out the rules. 

14
00:00:29,010 --> 00:00:30,690
例如，如果球撞
For example, if the ball hits 

15
00:00:30,690 --> 00:00:32,160
到砖块，则砖应该
the brick then the brick should 

16
00:00:32,160 --> 00:00:34,230
消失，球应反弹。
vanish and the ball should rebound. 

17
00:00:34,230 --> 00:00:36,180
但是，如果球从屏幕的底部
But if the ball falls off the bottom of 

18
00:00:36,180 --> 00:00:38,610
掉下来，那么球员也许会失去生命。
the screen then maybe the player loses their life. 

19
00:00:38,610 --> 00:00:41,355
我们可以使用此图表示。
We can represent that with this diagram. 

20
00:00:41,355 --> 00:00:44,225
规则和数据出现答案。
Rules and data go in answers come out. 

21
00:00:44,225 --> 00:00:45,620
规则以编程语言
Rules are expressed in 

22
00:00:45,620 --> 00:00:48,320
表示，数据可以来自
a programming language and data can come from 

23
00:00:48,320 --> 00:00:50,090
从本地变量一直
a variety of sources from 

24
00:00:50,090 --> 00:00:53,125
到数据库的各种来源。
local variables all the way up to databases. 

25
00:00:53,125 --> 00:00:56,930
机器学习重新排列了这个图表，
Machine learning rearranges this diagram 

26
00:00:56,930 --> 00:00:58,475
我们将答案放入数据
where we put answers in data 

27
00:00:58,475 --> 00:01:00,605
中，然后将规则删除。
in and then we get rules out. 

28
00:01:00,605 --> 00:01:02,945
因此，我们不是作为开发人员
So instead of us as developers figuring 

29
00:01:02,945 --> 00:01:05,510
弄清楚何时应删除砖块的规则，
out the rules when should the brick be removed, 

30
00:01:05,510 --> 00:01:07,205
玩家的生命终止或
when should the player's life end, 

31
00:01:07,205 --> 00:01:10,310
对任何其他概念的所需分析是什么，
or what's the desired analytic for any other concept, 

32
00:01:10,310 --> 00:01:12,170
我们将要做的就是为我们
what we will do is we can get a bunch of 

33
00:01:12,170 --> 00:01:13,850
想要的东西得到很多
examples for what we want to 

34
00:01:13,850 --> 00:01:17,560
示例查看然后让计算机找出规则。
see and then have the computer figure out the rules. 

35
00:01:17,560 --> 00:01:20,360
现在，这对于无法通过自己弄清楚
Now, this is particularly valuable for problems that 

36
00:01:20,360 --> 00:01:23,435
规则来解决的问题特别有价值。
you can't solve by figuring the rules out for yourself. 

37
00:01:23,435 --> 00:01:26,765
因此，请考虑这个示例，活动识别。
So consider this example, activity recognition. 

38
00:01:26,765 --> 00:01:29,870
如果我正在构建一个设备，该设备可以
If I'm building a device that detects if somebody is say 

39
00:01:29,870 --> 00:01:32,975
检测到有人说走路并且有关于
walking and I have data about their speed, 

40
00:01:32,975 --> 00:01:34,970
他们的速度的数据，
I might write code like this 

41
00:01:34,970 --> 00:01:36,830
我可能会编写这样的
and if they're running well that's 

42
00:01:36,830 --> 00:01:39,170
代码，如果它们运行良好，
a faster speed so I could adapt my code 

43
00:01:39,170 --> 00:01:41,580
这是一个更快的速度
to this and if they're biking, 

44
00:01:41,580 --> 00:01:43,025
骑自行车，那还不错。
well that's not too bad either. 

45
00:01:43,025 --> 00:01:45,260
我可以这样调整代码。
I can adapt my code like this. 

46
00:01:45,260 --> 00:01:47,780
但是后来我也必须做高尔夫的认可，
But then I have to do golf recognition too, 

47
00:01:47,780 --> 00:01:49,825
现在我的概念被打破了。
now my concept becomes broken. 

48
00:01:49,825 --> 00:01:51,080
但是，不仅如此，
But not only that, 

49
00:01:51,080 --> 00:01:53,750
当然，仅凭速度就可以做到很幼稚。
doing it by speed alone of course is quite naive. 

50
00:01:53,750 --> 00:01:56,150
我们以不同的速度行走和跑步，
We walk and run at different speeds uphill and 

51
00:01:56,150 --> 00:01:57,620
下坡和其他人
downhill and other people 

52
00:01:57,620 --> 00:01:59,390
以不同的速度行走和跑步。
walk and run at different speeds to us. 

53
00:01:59,390 --> 00:02:01,820
因此，让我们回到此图。
So, let's go back to this diagram. 

54
00:02:01,820 --> 00:02:04,050
最终，机器学习非常
Ultimately machine learning is very 

55
00:02:04,050 --> 00:02:06,770
相似，但我们只是翻转轴。
similar but we're just flipping the axes. 

56
00:02:06,770 --> 00:02:09,350
因此，我不得不妥协，而不是
So instead of me trying to express the problem as 

57
00:02:09,350 --> 00:02:12,170
我试图将问题作为规则
rules when often that isn't even possible, 

58
00:02:12,170 --> 00:02:13,595
表达为规则。
I'll have to compromise. 

59
00:02:13,595 --> 00:02:15,470
新的范式是我得到了
The new paradigm is that I get 

60
00:02:15,470 --> 00:02:17,720
很多示例，然后在这些示例上
lots and lots of examples and then I have 

61
00:02:17,720 --> 00:02:20,150
有标签，我使用数据说
labels on those examples and I use 

62
00:02:20,150 --> 00:02:23,105
这就是步行的样子，这就是跑步的
the data to say this is what walking looks like, 

63
00:02:23,105 --> 00:02:24,350
样子，这就是自行车的
this is what running looks like, 

64
00:02:24,350 --> 00:02:26,510
样子，是的，是的，是的。
this is what biking looks like and yes, 

65
00:02:26,510 --> 00:02:28,400
即使这也是高尔夫的样子。
even this is what golfing looks like. 

66
00:02:28,400 --> 00:02:30,980
因此，随着计算机推断
So, then it becomes answers and data 

67
00:02:30,980 --> 00:02:34,535
规则，它成为答案和数据。
in with rules being inferred by the machine. 

68
00:02:34,535 --> 00:02:36,710
然后，机器学习
A machine learning algorithm then 

69
00:02:36,710 --> 00:02:38,645
算法可以计算每组数据
figures out the specific patterns in 

70
00:02:38,645 --> 00:02:40,160
集中确定
each set of data that 

71
00:02:40,160 --> 00:02:42,650
每个数据的特定模式。
determines the distinctiveness of each. 

72
00:02:42,650 --> 00:02:44,270
这就是这个编程范式
That's what's so powerful and 

73
00:02:44,270 --> 00:02:46,660
如此强大和令人兴奋的原因。
exciting about this programming paradigm. 

74
00:02:46,660 --> 00:02:48,440
这不仅仅是做同样
It's more than just a new way 

75
00:02:48,440 --> 00:02:49,775
旧事物的新方法。
of doing the same old thing. 

76
00:02:49,775 --> 00:02:51,770
它打开了以前无法
It opens up new possibilities 

77
00:02:51,770 --> 00:02:53,905
做到的新可能性。
that were infeasible to do before. 

78
00:02:53,905 --> 00:02:55,270
因此，在接下来的
So in the next few minutes, 

79
00:02:55,270 --> 00:02:57,680
几分钟中，我将向您展示创建
I'm going to show you the basics of creating 

80
00:02:57,680 --> 00:02:59,360
神经网络的基础知识，
a neural network which is 

81
00:02:59,360 --> 00:03:02,435
这是进行这种模式识别的主力。
the workhorse of doing this type of pattern recognition. 

82
00:03:02,435 --> 00:03:04,040
神经网络
A neural network is 

83
00:03:04,040 --> 00:03:06,200
只是机器学习的更先进的实现，
just a slightly more advanced implementation of 

84
00:03:06,200 --> 00:03:08,695
我们将其称为深度学习。
machine learning and we call that deep learning. 

85
00:03:08,695 --> 00:03:11,330
但是幸运的是，编码实际上非常容易。
But fortunately it's actually very easy to code. 

86
00:03:11,330 --> 00:03:13,430
因此，我们将直接进入深度学习。
So, we're just going to jump straight into deep learning. 

87
00:03:13,430 --> 00:03:16,130
我们将从一个简单的开始，然后继续
We'll start with a simple one and then we'll move on 

88
00:03:16,130 --> 00:03:17,675
进行大约10行代码
to one that does computer vision 

89
00:03:17,675 --> 00:03:19,250
的计算机视觉。
in about 10 lines of code. 

90
00:03:19,250 --> 00:03:22,085
但是，让我们从一个非常简单的“ Hello World”示例开始。
But let's start with a very simple "Hello World" example. 

91
00:03:22,085 --> 00:03:24,870
因此，您可以看到一切如何悬挂在一起。
So you can see just how everything hangs together. 

